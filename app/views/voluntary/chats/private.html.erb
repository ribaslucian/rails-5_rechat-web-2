<%= render 'menu_user' %>
<style>
    body {
        background-image: url('/assets/telegram_background.jpg');
        background-size: 100% 100%;
        background-repeat: repeat;
    }

    .ws-messages {
        max-height: calc(100% - 115px) !important;
    }

    .ws-message {
        position: relative;
        display: table;
        width: 100%;
    }

    .ws-message-left,
    .ws-message-right {
        display: table;
        max-width: 80%;
        padding: 5px 10px;
        background: white;
        border-radius: 8px;
        margin: 2px 15px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
        position: relative;
    }

    .ws-message-left {
        float: left;
    }

    .ws-message-right {
        float: right;
        background-color: #effedd;
    }


    .ws-send-message-painel {
        position: absolute;
        bottom: 0px;
        left: 0px;
        right: 0px;
        padding: 3px 5px;
    }
    .ws-send-message-painel .ui.search {
        float: left; width: calc(100% - 55px)
    }
    .ws-send-message-painel .ui.search input {
        width: 100%; padding: 15px; border: 0px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    }
    .ws-send-message-painel .ui.button {
        float: right;
        padding: 12px;
        padding-bottom: 10px;
        padding-right: 10px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    }
</style>

<div class="ws-mobile-container-y ws-messages">
    <div class="ws-mobile-container-x ws-behavior-messages">

        <% last_side = current_side = nil %>
        <% Message.where("origin_user_id = #{session[:user]['id']} OR destiny_user_id = #{session[:user]['id']}").order(:created).each do |m| %>

          <% current_side = m.origin_user_id == session[:user]['id'] ? 'right' : 'left' %>

          <%= '<div style="padding: 4px;"></div>'.html_safe if current_side != last_side %>

          <%= render partial: 'message', locals: {message: m} %>

          <% last_side = current_side %>
        <% end %>
    </div>
</div>


<div class="ws-send-message-painel">
    <div class="ws-mobile-container-x">
        <div class="ui search" >
            <input class="prompt behavior-input-type-message" type="text" placeholder="Digite uma mensagem..." autofocus="autofocus" />
        </div>

        <div class="ui button icon circular blue shadow-button behavior-button-send-message">
            <span class="material-icons">send</span>
        </div>
    </div>
</div>



<style>
    .scroll-item {
        <%#*background-color: blue !important;%>
    }
    .scroll-item.is-active {
        <%#*background-color: #0e8824 !important;%>
    }
</style>

<script>
  $(document).ready(function () {
      $('.ws-messages').scrollTop(1000000000);

      var container_start = $('.ws-mobile-container-y').position().top;
      var container_end = container_start + $('.ws-mobile-container-y').height();

      function visible_messages_calc() {
          var times = [];
          var time;

          var total_height = $('.ws-mobile-container-y').height();
          $('.ws-mobile-container-y').scroll(function (event) {
              $('.scroll-item').each(function (i) {
                  var child_start = $(this).offset().top;
                  var child_middle = $(this).height() / 2;
                  var id = $('[message-id]', $(this)).attr('message-id');

                  if (
                          ((child_start + child_middle) >= container_start) // comparar top do container
                          && ((child_start + child_middle) <= container_end) // comparar bot do container
                          ) {

                      // verificar se jÃ¡ nao estava ativo
                      if (!$(this).hasClass('is-active')) {
                          times[id] = new Date();
                          $(this).addClass('is-active');
                      }

                  } else {
                      // verificar se estava ativo de fato
                      if ($(this).hasClass('is-active')) {
                          time = ((new Date()) - times[id]) / 1000;

                          // l(id + ': TEMPO VISUALIZADO: ' + time);
                          times[id] = 0;

                          $(this).removeClass('is-active');
                      }
                  }
              });
          });
      }

      visible_messages_calc();
  });
</script>

